[{"/Users/cupmen2/Workspace/仮/blog/pages/404.tsx":"1","/Users/cupmen2/Workspace/仮/blog/pages/_app.tsx":"2","/Users/cupmen2/Workspace/仮/blog/pages/_document.tsx":"3","/Users/cupmen2/Workspace/仮/blog/pages/about/index.tsx":"4","/Users/cupmen2/Workspace/仮/blog/pages/all.tsx":"5","/Users/cupmen2/Workspace/仮/blog/pages/article/[id].tsx":"6","/Users/cupmen2/Workspace/仮/blog/pages/design/index.tsx":"7","/Users/cupmen2/Workspace/仮/blog/pages/design/movie.tsx":"8","/Users/cupmen2/Workspace/仮/blog/pages/design/photo.tsx":"9","/Users/cupmen2/Workspace/仮/blog/pages/index.tsx":"10","/Users/cupmen2/Workspace/仮/blog/pages/programming/docker.tsx":"11","/Users/cupmen2/Workspace/仮/blog/pages/programming/gas.tsx":"12","/Users/cupmen2/Workspace/仮/blog/pages/programming/index.tsx":"13","/Users/cupmen2/Workspace/仮/blog/pages/programming/js.tsx":"14","/Users/cupmen2/Workspace/仮/blog/pages/programming/linux.tsx":"15","/Users/cupmen2/Workspace/仮/blog/pages/programming/node.js.tsx":"16","/Users/cupmen2/Workspace/仮/blog/pages/programming/python.tsx":"17","/Users/cupmen2/Workspace/仮/blog/pages/programming/react.tsx":"18","/Users/cupmen2/Workspace/仮/blog/pages/search/index.tsx":"19","/Users/cupmen2/Workspace/仮/blog/pages/seo/index.tsx":"20","/Users/cupmen2/Workspace/仮/blog/pages/seo/sns.tsx":"21","/Users/cupmen2/Workspace/仮/blog/pages/seo/web.tsx":"22","/Users/cupmen2/Workspace/仮/blog/pages/seo/youtube.tsx":"23","/Users/cupmen2/Workspace/仮/blog/components/Layout.tsx":"24","/Users/cupmen2/Workspace/仮/blog/components/Layout_parts.tsx":"25","/Users/cupmen2/Workspace/仮/blog/components/useFadeInOut.ts":"26","/Users/cupmen2/Workspace/仮/blog/lib/posts.ts":"27"},{"size":448,"mtime":1652798342427,"results":"28","hashOfConfig":"29"},{"size":628,"mtime":1652798342428,"results":"30","hashOfConfig":"29"},{"size":1666,"mtime":1656212785750,"results":"31","hashOfConfig":"29"},{"size":3684,"mtime":1656224851548,"results":"32","hashOfConfig":"29"},{"size":1084,"mtime":1652798342428,"results":"33","hashOfConfig":"29"},{"size":4466,"mtime":1656217576765,"results":"34","hashOfConfig":"29"},{"size":2189,"mtime":1652798342429,"results":"35","hashOfConfig":"29"},{"size":2242,"mtime":1652798342429,"results":"36","hashOfConfig":"29"},{"size":2242,"mtime":1652798342429,"results":"37","hashOfConfig":"29"},{"size":4432,"mtime":1656812213195,"results":"38","hashOfConfig":"29"},{"size":2166,"mtime":1652798342429,"results":"39","hashOfConfig":"29"},{"size":2246,"mtime":1652798342429,"results":"40","hashOfConfig":"29"},{"size":2204,"mtime":1652798342429,"results":"41","hashOfConfig":"29"},{"size":2243,"mtime":1652798342429,"results":"42","hashOfConfig":"29"},{"size":2252,"mtime":1652798342430,"results":"43","hashOfConfig":"29"},{"size":2258,"mtime":1652798342430,"results":"44","hashOfConfig":"29"},{"size":2255,"mtime":1652798342431,"results":"45","hashOfConfig":"29"},{"size":2252,"mtime":1652798342431,"results":"46","hashOfConfig":"29"},{"size":1649,"mtime":1656210994566,"results":"47","hashOfConfig":"29"},{"size":2180,"mtime":1652798342431,"results":"48","hashOfConfig":"29"},{"size":2234,"mtime":1652798342431,"results":"49","hashOfConfig":"29"},{"size":2234,"mtime":1652798342432,"results":"50","hashOfConfig":"29"},{"size":2246,"mtime":1652798342432,"results":"51","hashOfConfig":"29"},{"size":734,"mtime":1652798335096,"results":"52","hashOfConfig":"29"},{"size":25724,"mtime":1656225126057,"results":"53","hashOfConfig":"29"},{"size":877,"mtime":1652798335096,"results":"54","hashOfConfig":"29"},{"size":2037,"mtime":1652798335097,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w8h9lv",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/cupmen2/Workspace/仮/blog/pages/404.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/_app.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/_document.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/about/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/all.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/article/[id].tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/design/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/design/movie.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/design/photo.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/docker.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/gas.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/js.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/linux.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/node.js.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/python.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/programming/react.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/search/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/seo/index.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/seo/sns.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/seo/web.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/pages/seo/youtube.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/components/Layout.tsx",[],[],"/Users/cupmen2/Workspace/仮/blog/components/Layout_parts.tsx",["138","139"],[],"import Image from 'next/image';\nimport Drawer from 'react-modern-drawer';\nimport Link from 'next/link';\nimport 'react-modern-drawer/dist/index.css'\nimport { ReactNode, useState, Component } from \"react\";\nimport styles from 'styles/Home.module.scss';\nimport header_styles from 'styles/Header.module.scss';\nimport footer_styles from 'styles/Footer.module.scss';\nimport Articles_styles from 'styles/ArticleList.module.scss';\nimport Article_styles from 'styles/Article.module.scss';\nimport algoliasearch from 'algoliasearch';\nimport { InstantSearch, SearchBox, Hits, Configure, Pagination, PoweredBy } from 'react-instantsearch-dom';\nimport { useFadeInOut } from \"components/useFadeInOut\";\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faPaintBrush, faSearch, faKeyboard, faQuestion, faUser, faImage, faVideo } from '@fortawesome/free-solid-svg-icons';\nimport { faYoutube, faTwitter, faInstagram, faPython, faNodeJs, faReact, faAws, faGithub } from '@fortawesome/free-brands-svg-icons';\nimport { Hit } from 'react-instantsearch-core';\nimport { CodeProps } from \"react-markdown/lib/ast-to-react\";\nimport { TwitterTweetEmbed } from \"react-twitter-embed\";\nimport YouTubeEmbed from \"react-youtube\";\nimport Skeleton from \"react-loading-skeleton\";\nimport Head from 'next/head'\nimport ReactPaginate from 'react-paginate';\n\ninterface ArticleProps {\n    title: string;\n    janle: string;\n    category: string;\n    view_janle: string;\n    view_category: string;\n    date: string;\n    detail: string;\n}\ninterface searchArticleProps {\n    title: string;\n    janle: string;\n    category: string;\n    view_janle: string;\n    view_category: string;\n    date: string;\n}\n\nconst searchClient = algoliasearch('AG783LQQY3', '73d4d320e08b008e617f4e1ef1734ae5');\nconst searchIndex = \"blogs\";\n\n{/* Header関数 */}\n\nexport function Header() {\n    const [isOpen, setIsOpen] = useState(false)\n    const toggleDrawer = () => {\n        setIsOpen((prevState) => !prevState)\n    }\n    const { toggleDisplay, boxStyle } = useFadeInOut(0.2)\n    const [showSearchModal, setShowSearchModal] = useState(false);\n    const ShowSearchModal = () => {\n      setShowSearchModal(true);\n    };\n    return(\n      <>\n      <header className={header_styles.header}>\n        <Link href=\"/\"><a className={`${header_styles.header_title} ${styles.ubuntu_bold}`}><img src=\"/storage/img/logo/logoblack.svg\" alt={`${process.env.NEXT_PUBLIC_SITETITLE}`}/></a></Link>\n        <nav className={header_styles.nav}>\n        <ul className={header_styles.nav}>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"/programming\"><a className={`${styles.ubuntu_light}`}>Programming</a></Link></li>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"/design\"><a className={`${styles.ubuntu_light}`}>Design</a></Link></li>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"/seo\"><a className={`${styles.ubuntu_light}`}>SEO</a></Link></li>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"https://www.youtube.com/channel/UCZX3bYOf9QoMix48D5bZYWQ\"><a className={`${styles.ubuntu_light}`}>Youtube</a></Link></li>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"/all\"><a className={`${styles.ubuntu_light}`}>All</a></Link></li>\n            <li className={`${header_styles.nav_link} ${header_styles.ubuntu_light}`}><Link href=\"/about\"><a className={`${styles.ubuntu_light}`}>About</a></Link></li>\n            <a onClick={toggleDisplay} className={`${styles.search_container} ${header_styles.pc_view_search_container}`} id={`${header_styles.pc_view_search_container}`}>\n                <div className={styles.search_bar} placeholder=\"Search\" />\n                <div className={`${styles.search_button} ${header_styles.search_button}`}>\n                    <FontAwesomeIcon icon={faSearch} size=\"1x\" color=\"#FFF\" />\n                </div>\n            </a>\n            <button onClick={toggleDrawer} className={`${header_styles.menu_trigger}`}>\n                <span></span>\n                <span></span>\n                <span></span>\n            </button>\n        </ul>\n        </nav>\n    </header>\n    <SearchModal showFlag={boxStyle} setShowModal={toggleDisplay}/>\n    <Drawer className={`${header_styles.drawer}`} open={isOpen} onClose={toggleDrawer} zIndex={10000} direction='right'>\n      <div className={`${header_styles.drawer_close_button_div}`}>\n        </div>\n          <nav>\n            <Link href=\"/search\">\n              <a style={{width: \"100%\"}}>\n                <div className={`${styles.search_container} ${header_styles.sp_view_search_container}`}>\n                  <div className={`${styles.search_bar} ${header_styles.sp_search_bar}`}/>\n                  <div className={`${styles.search_button} ${header_styles.sp_search_button}`}>\n                    <FontAwesomeIcon icon={faSearch} size=\"1x\" color=\"#FFF\"/>\n                  </div>\n                </div>\n              </a>\n            </Link>\n            <Link href=\"/\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>Home</a></Link>\n            <Link href=\"/programming\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>Programming</a></Link>\n            <Link href=\"/design\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>Design</a></Link>\n            <Link href=\"/seo\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>SEO</a></Link>\n            <Link href=\"/all\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>All</a></Link>\n            <Link href=\"/about\"><a className={`${header_styles.drawer_link} ${styles.ubuntu_light}`}>about</a></Link>\n      </nav>\n    </Drawer>\n    </>\n    );\n}\n\n{/* Footer関数 */}\n\nexport function Footer() {\n  return(\n        <footer className={`${footer_styles.footer}`}>\n            <div className={`${footer_styles.footer_logo_div}`}><Link href=\"/\">\n                <a className={`${footer_styles.footer_logo} ${styles.ubuntu_bold}`}>\n                  <img src=\"/storage/img/logo/logowhite.svg\" alt={`${process.env.NEXT_PUBLIC_SITETITLE}`}/>\n                </a>\n            </Link></div>\n            <nav>\n                <li>\n                    <Link href=\"/\">\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>Home</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"/about\">\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium} ${styles.p_ja}`}>About</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"/programming\">\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>Programming</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"/design\">\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>Design</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href=\"/seo\">\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>SEO</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href={`${process.env.NEXT_PUBLIC_YTLINK}`}>\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>Youtube</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href={`${process.env.NEXT_PUBLIC_TWLINK}`}>\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>Twitter</a>\n                    </Link>\n                </li>\n                <li>\n                    <Link href={`${process.env.NEXT_PUBLIC_GHLINK}`}>\n                        <a className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>GitHub</a>\n                    </Link>\n                </li>\n                <li>\n                    <small className={`${footer_styles.footer_nav_link} ${styles.ubuntu_medium}`}>© 2022 {`${process.env.NEXT_PUBLIC_SITETITLE}`}.</small>\n                </li>\n            </nav>\n        </footer>\n  )\n}\n\n{/* container関数たち*/}\n\nexport const Side = () => {\n  return(\n    <aside className={styles.side_panel}>\n      <div className={styles.side_profile}>\n        <h2 className={styles.source_han_sans_bold}>Site Admin</h2>\n        <Link href=\"/about\">\n          <a className={`${styles.profile_link}`}><Image src=\"/storage/img/icon/icon.svg\" alt=\"profile_icon\" width={125} height={125}/>\n            <h2 className={styles.source_han_sans_bold}>\n              cupmen\n            </h2>\n            <p className={styles.source_han_sans_light}>\n              趣味プロの一般人\n            </p>\n            <p className={styles.source_han_sans_light}>\n              主にReactとPythonをやっています。\n            </p>\n          </a>\n        </Link>\n      </div>\n      <div className={`${styles.side_janles_div}`}>\n        <h2 className={styles.source_han_sans_bold}>カテゴリ</h2>\n        <div className={`${styles.janles}`}>\n            <Link href=\"/programming/react\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/react.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>React</h2>\n              </a>\n            </Link>\n            <Link href=\"/programming/docker\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/docker.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Docker</h2>\n              </a>\n            </Link>\n            <Link href=\"/programming/python\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/python.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Python</h2>\n            </a>\n            </Link>\n            <Link href=\"/programming/node.js\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/node.js.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Node.js</h2>\n              </a>\n            </Link>\n            <Link href=\"/programming/linux\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/linux.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Linux</h2>\n              </a>\n            </Link>\n            <Link href=\"/seo/web\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/web.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>ウェブSEO</h2>\n              </a>\n            </Link>\n            <Link href=\"/seo/youtube\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/youtube.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Youtube SEO</h2>\n              </a>\n            </Link>\n            <Link href=\"/seo/sns\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/sns.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>SNS SEO</h2>\n              </a>\n            </Link>\n            <Link href=\"/design/photo\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/photo.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Photo</h2>\n              </a>\n            </Link>\n            <Link href=\"/design/movie\">\n              <a className={`${styles.janle_div}`}>\n                <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/movie.svg`} className={`${Articles_styles.article_icon}`}/>\n                <h2>Movie</h2>\n              </a>\n            </Link>\n        </div>\n      </div>\n    </aside>\n  );\n}\n\n{/* Others系 */}\n\nexport function Others_list() {\n    return(\n        <div className={Articles_styles.article_list}>\n            <h2 className={Articles_styles.home_h2}>All</h2>\n            <Link href=\"/programming\"><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faCode} size=\"8x\" color=\"#3a3a3a\" />\n                <p>Programing</p>\n            </a></Link>\n            <Link href=\"/design\"><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faPaintBrush} size=\"8x\" color=\"#3a3a3a\" />\n                <p>Design</p>\n            </a></Link>\n            <Link href=\"/seo\"><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faSearch} size=\"8x\" color=\"#3a3a3a\" />\n                <p>SEO</p>\n            </a></Link>\n            <Link href={`${process.env.NEXT_PUBLIC_YTLINK}`}><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faYoutube} size=\"8x\" color=\"#3a3a3a\" />\n                <p>Youtube</p>\n            </a></Link>\n            <Link href={`${process.env.NEXT_PUBLIC_TWLINK}`}><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faTwitter} size=\"8x\" color=\"#3a3a3a\" />\n                <p>Twitter</p>\n            </a></Link>\n            <Link href={`${process.env.NEXT_PUBLIC_GHLINK}`}><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faGithub} size=\"8x\" color=\"#3a3a3a\" />\n                <p className={`${Articles_styles.p_ja}`}>GitHub</p>\n            </a></Link>\n            <Link href=\"/about\"><a className={`${Articles_styles.others_card} ${Articles_styles.article}`}>\n                <FontAwesomeIcon className={`${Articles_styles.others_icon}`} icon={faUser} size=\"8x\" color=\"#3a3a3a\" />\n                <p className={`${Articles_styles.p_ja}`}>About</p>\n            </a></Link>\n        </div>\n    );\n}\n\nexport const NotFoundContainer = () => {\n    return(\n        <div className={Articles_styles.article_list}>\n            <Image src=\"/storage/img/error/404.svg\" alt=\"404 NotFound\" className={`${Articles_styles.error_img}`} width={1000} height={600} />\n            <p className={`${Articles_styles.error_text} ${Articles_styles.source_han_sans_regular}`}>記事が削除されたかURLが変更されたため記事を表示できません。\n            </p>\n            <InstantSearch indexName={searchIndex} searchClient={searchClient}>\n              <SearchBox/>\n              <div className={`${header_styles.search_list}`}>\n                <Configure hitsPerPage={5} />\n                <Hits hitComponent={SearchhitComponent} />\n                <Pagination />\n                <PoweredBy />\n              </div>\n            </InstantSearch>\n        </div>\n    )\n}\n\nexport const Article = (props: ArticleProps) => {\n    return(\n        <><object type=\"image/svg+xml\" data={`/storage/img/janle-icon/${props.category}.svg`} className={`${Articles_styles.article_icon}`}/>\n        <div><h2 className={`${styles.source_han_sans_bold} ${Articles_styles.Articleh2}`}>{ props.title }</h2>\n          <p className={`${Articles_styles.timeDetail} ${styles.source_han_sans_light}`}><time dateTime={props.date}>投稿日： {props.date}</time></p>\n          <div className={`${Articles_styles.source_han_sans_regular} ${Articles_styles.category_tags}`}>\n            <Link href={`/${props.janle}`}><a className={`${styles.source_han_sans_regular} ${Articles_styles.category_tag}`}>{ props.view_janle }</a></Link>\n            <Link href={`/${props.janle}/${props.category}`}><a className={`${styles.source_han_sans_regular} ${Articles_styles.category_tag}`}>{ props.view_category }</a></Link>\n          </div>\n          <p className={`${Articles_styles.timeDetail} ${styles.source_han_sans_light}`}>{ props.detail }</p>\n        </div>\n        </>\n    )\n}\nexport const SearchArticle = (props: searchArticleProps) => {\n    return(\n        <>\n        <object type=\"image/svg+xml\" data={`/storage/img/janle-icon/${props.category}.svg`} className={`${Articles_styles.searcharticle_icon}`}/>\n        <div><h2 className={`${styles.source_han_sans_bold} ${Articles_styles.searchArticleh2}`}>{ props.title }</h2>\n          <time dateTime={props.date} className={`${Articles_styles.searchTimeDetail} ${styles.source_han_sans_light}`}>投稿日： {props.date}</time>\n          <div className={`${Articles_styles.source_han_sans_regular} ${Articles_styles.category_tags}`}>\n            <Link href={`/${props.janle}`}><a className={`${styles.source_han_sans_regular} ${Articles_styles.category_tag} ${Articles_styles.searchCategoryTag}`}>{ props.view_janle }</a></Link>\n            <Link href={`/${props.janle}/${props.category}`}><a className={`${styles.source_han_sans_regular} ${Articles_styles.category_tag} ${Articles_styles.searchCategoryTag}`}>{ props.view_category }</a></Link>\n          </div>\n        </div>\n        </>\n    )\n}\n\ntype FilListProps = {\n  janle: string,\n  url: string,\n  filter_Article: ReactNode,\n  filter_length: any,\n  perPage: number,\n  handlePageChange: any,\n}\n\nexport const FilList = (props: FilListProps) => {\n  \n  return (\n  <>\n    <Head>\n      <title>{process.env.NEXT_PUBLIC_SITETITLE} - {props.janle}</title>\n      <meta name=\"keywords\" content={process.env.NEXT_PUBLIC_INDEXKEYWORD}/>\n      <meta name=\"description\" content={process.env.NEXT_PUBLIC_INDEXDESCRIPTION}/>\n      <meta property=\"og:url\" content={`${process.env.NEXT_PUBLIC_SITEDOMAIN}/${props.url}`} />\n      <meta property=\"og:type\" content={process.env.NEXT_PUBLIC_INDEXTYPE}/>\n      <meta property=\"og:title\" content={`${process.env.NEXT_PUBLIC_SITETITLE} - ${props.janle}`}/>\n      <meta property=\"og:description\" content={process.env.NEXT_PUBLIC_INDEXDESCRIPTION}/>\n    </Head>\n    <div className={`${Articles_styles.article_list}`}>\n      <h2 className={Articles_styles.home_h2}>{props.janle}</h2>\n      {props.filter_Article}\n    </div>\n    <ReactPaginate\n      previousLabel={'<'}\n      nextLabel={'>'}\n      breakLabel={'...'}\n      pageCount={Math.ceil(props.filter_length/props.perPage)} // 全部のページ数。端数の場合も考えて切り上げに。\n      marginPagesDisplayed={2} // 一番最初と最後を基準にして、そこからいくつページ数を表示するか\n      pageRangeDisplayed={5} // アクティブなページを基準にして、そこからいくつページ数を表示するか\n      onPageChange={props.handlePageChange} // function\n      containerClassName={`${Articles_styles.pagelink_div}`} // ul\n      pageLinkClassName={`${Articles_styles.pagelink}`} // Default li a\n      activeLinkClassName={`${Articles_styles.active_pagelink}`} // Active li\n      previousLinkClassName={`${Articles_styles.pagelink}`} // [<] li\n      nextLinkClassName={`${Articles_styles.pagelink}`} // [>] li\n      disabledLinkClassName={`${Articles_styles.notfound_pagelink}`} // notfound [<,>] li\n    />\n  </>\n  )\n}\n\ninterface HitDoc {\n  objectID: string;\n  id:string\n  content: string\n  data: {title:string, date:string, janle:string, view_janle:string, category:string, view_category:string, sns_detail: string}\n  isEmpty: boolean\n  excerpt: string\n  orig: string\n}\n\ninterface HitcomProps {\n  hit: Hit<HitDoc>;\n}\n\ninterface HitComponentProps extends HitcomProps {\n  onClick: () => void;\n}\n\nfunction HitComponent({ hit }: HitComponentProps): JSX.Element {\n  return (\n      <a href={`/article/${hit.id}`} className={Articles_styles.article} key={hit.data.date}>\n        <SearchArticle\n        title={hit.data.title}\n        janle={hit.data.janle}\n        category={hit.data.category}\n        view_janle={hit.data.view_janle}\n        view_category={hit.data.view_category}\n        date={hit.data.date}\n        />\n    </a>\n  );\n}\n\nexport const hitComponent = ({ hit }: HitcomProps): JSX.Element => (\n  <HitComponent hit={hit} onClick={() => null} />\n);\n\ninterface SearchProps {\n  showFlag: object,\n  setShowModal: any\n}\n\nconst SearchModal = (props: SearchProps) => {\n  const closeModal = () => {\n    props.setShowModal(false);\n  };\n  return (\n    <>\n      {props.showFlag ? ( // showFlagがtrueだったらModalを表示する\n        <div id={`${header_styles.modal}`} style={props.showFlag}>\n          <div id={`${header_styles.modalclose}`}></div>\n          <div id={`${header_styles.search_window}`}>\n            <InstantSearch indexName={searchIndex} searchClient={searchClient}>\n              <div className={`${header_styles.X}`}>\n                <SearchBox />\n                <button onClick={closeModal}>\n                  <svg id=\"a\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 48 48\"><g id=\"b\"><g id=\"c\"><rect width=\"48\" height=\"48\" style={{fill:\"none\"}}/></g><g id=\"d\"><line x1=\"12.13\" y1=\"12.63\" x2=\"36.13\" y2=\"36.13\" style={{fill:\"none\", stroke:\"#3a3a3a\"}}/><line x1=\"12.38\" y1=\"36.38\" x2=\"35.88\" y2=\"12.38\" style={{fill:\"none\", stroke:\"#3a3a3a\"}}/></g></g></svg>\n                </button>\n              </div>\n              <div className={`${header_styles.search_list}`}>\n                <Configure hitsPerPage={4} />\n                <Hits hitComponent={hitComponent} />\n                <Pagination />\n                <PoweredBy />\n              </div>\n            </InstantSearch>\n          </div>\n        </div>\n      ) : (\n        <></>// showFlagがfalseの場合はModalは表示しない\n      )}\n    </>\n  );\n};\n\ninterface SearchHitDoc {\n  objectID: string;\n  id:string\n  content: string\n  data: {title:string, detail:string, date:string, janle:string, view_janle:string, category:string, view_category:string, sns_detail: string}\n  isEmpty: boolean\n  excerpt: string\n  orig: string\n}\n\ninterface SearchHitcomProps {\n  hit: Hit<SearchHitDoc>;\n}\n\ninterface SearchHitComponentProps extends SearchHitcomProps {\n  onClick: () => void;\n}\n\nfunction SearchHitComponent({ hit }: SearchHitComponentProps): JSX.Element {\n  return (\n    <Link href={`/article/${hit.id}`}>\n      <a className={Articles_styles.article} key={hit.data.date}>\n        <Article\n        title={hit.data.title}\n        janle={hit.data.janle}\n        category={hit.data.category}\n        view_janle={hit.data.view_janle}\n        view_category={hit.data.view_category}\n        detail={hit.data.detail}\n        date={hit.data.date}\n        />\n    </a>\n  </Link>\n  );\n}\n\nexport const SearchhitComponent = ({ hit }: SearchHitcomProps): JSX.Element => (\n  <SearchHitComponent hit={hit} onClick={() => null} />\n);\n\nexport const CodeBlock = ({ className, children, ...props }: CodeProps) => {\n  // カスタム値の判定材料を抽出\n  const prefix = \"language-\";\n  const classes = className\n    ?.split(\" \")\n    .find((c) => c.startsWith(prefix))\n    ?.replace(prefix, \"\");\n  const params = classes ? classes.split(\":\") : [];\n\n  if (params.length > 0 && params[0] === \"twitter\") {\n    // Twitter埋め込み\n    const id = children.toString().replace(/\\r?\\n/g, \"\");\n    return <TwitterTweetEmbed tweetId={id} placeholder={<Skeleton height={300}/>}/>;\n  }\n\n  if (params.length > 0 && params[0] === \"youtube\") {\n    // YouTube埋め込み\n    const id = children.toString().replace(/\\r?\\n/g, \"\");\n    return <YouTubeEmbed videoId={id}/>;\n  }\n\n  // 通常のコンポーネントを返却\n  return (\n  <div className={`${Article_styles.codeblock}`}>\n    <code className={`${className} ${Article_styles.TWYT}`}>\n      {children || <Skeleton />}\n    </code>\n  </div>);\n};\nexport const H2 = ({ node, children}: {node: any, children: ReactNode}) => {\n  return (\n    <h2 id={node.position?.start.line.toString()}>{children}</h2>\n  );\n}\n\nexport const ankerLink = ({ node, children }: {node:any, children: ReactNode}) => {\n  return (\n    <li>\n      <Link href={\"#\"+node.position?.start.line.toString()}><a className={`${Article_styles.tocLink}`}>{children}</a></Link>\n    </li>\n  );\n}\n\nexport const CardLink = ({ node, children }: {node:any, children: ReactNode}) => {\n  return (\n    <li>\n      <a href={\"#\"+node.position?.start.line.toString()} className={`${Article_styles.tocLink}`}>{children}</a>\n    </li>\n  );\n}\n\nexport const MDLink = ({ href, children }: {href:any, children: any}) => {\n  return (\n    <Link href={`${href}`}>\n      <a>{children}</a>\n    </Link>\n  );\n}\n\nexport const Button = ({ href, children }: {href:string, children: ReactNode}) => {\n  return (\n    <li>\n      <a href={href} className={`${Article_styles.tocLink}`}>{children}</a>\n    </li>\n  );\n}\n\nexport const MDImg = ({ href, children }: {href:string, children: string}) => {\n  return (\n    <Image src={href} alt={children} objectFit=\"contain\"/>\n  );\n}\n\nexport const CustomLink = (props: any): JSX.Element => \n  props.href.startsWith('/') || props.href === '' ? (\n    <Link href={props.href}>\n      <a>{props.children}</a>\n    </Link>\n  ) : (\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {props.children}\n    </a>\n);","/Users/cupmen2/Workspace/仮/blog/components/useFadeInOut.ts",[],[],"/Users/cupmen2/Workspace/仮/blog/lib/posts.ts",[],[],{"ruleId":"140","severity":1,"message":"141","line":62,"column":93,"nodeType":"142","endLine":62,"endColumn":182},{"ruleId":"140","severity":1,"message":"141","line":119,"column":19,"nodeType":"142","endLine":119,"endColumn":108},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement"]