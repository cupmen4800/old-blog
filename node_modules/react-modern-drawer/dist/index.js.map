{"version":3,"file":"index.js","sources":["../src/index.tsx"],"sourcesContent":["import * as React from 'react'\r\nimport './styles.scss'\r\n\r\ntype Props = {\r\n    open: boolean\r\n    onClose?: () => void\r\n    direction: 'left' | 'right' | 'top' | 'bottom'\r\n    children?: React.ReactNode\r\n    duration?: number\r\n    overlayOpacity?: number\r\n    overlayColor?: String\r\n    enableOverlay?: boolean\r\n    style?: React.CSSProperties\r\n    zIndex?: number\r\n    size?: number | string\r\n    className?: string | undefined\r\n}\r\n\r\nconst getDirectionStyle = (\r\n    dir: string,\r\n    size?: number | string,\r\n): {} | React.CSSProperties => {\r\n    switch (dir) {\r\n        case 'left':\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n                transform: 'translate3d(-100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'right':\r\n            return {\r\n                top: 0,\r\n                right: 0,\r\n                transform: 'translate3d(100%, 0, 0)',\r\n                width: size,\r\n                height: '100vh',\r\n            }\r\n        case 'bottom':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                transform: 'translate3d(0, 100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n        case 'top':\r\n            return {\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                transform: 'translate3d(0, -100%, 0)',\r\n                width: '100%',\r\n                height: size,\r\n            }\r\n\r\n        default:\r\n            return {}\r\n    }\r\n}\r\n\r\nconst EZDrawer: React.FC<Props> = function ({\r\n    open,\r\n    onClose = () => {},\r\n    children,\r\n    style,\r\n    enableOverlay = true,\r\n    overlayColor = '#000',\r\n    overlayOpacity = 0.4,\r\n    zIndex = 100,\r\n    duration = 500,\r\n    direction,\r\n    size = 250,\r\n    className,\r\n}): JSX.Element {\r\n    const idSuffix = (Math.random() + 1).toString(36).substring(7)\r\n\r\n    const overlayStyles: React.CSSProperties = {\r\n        backgroundColor: `${overlayColor}`,\r\n        opacity: `${overlayOpacity}`,\r\n        zIndex: zIndex,\r\n    }\r\n\r\n    const drawerStyles: React.CSSProperties = {\r\n        zIndex: zIndex + 1,\r\n        transitionDuration: `${duration}ms`,\r\n        ...getDirectionStyle(direction, size),\r\n        ...style,\r\n    }\r\n\r\n    return (\r\n        <div id={'EZDrawer' + idSuffix} className='EZDrawer'>\r\n            <input\r\n                type='checkbox'\r\n                id={'EZDrawer__checkbox' + idSuffix}\r\n                className='EZDrawer__checkbox'\r\n                onChange={onClose}\r\n                checked={open}\r\n            />\r\n            <nav\r\n                role='navigation'\r\n                id={'EZDrawer__container' + idSuffix}\r\n                style={drawerStyles}\r\n                className={'EZDrawer__container ' + className}\r\n            >\r\n                {children}\r\n            </nav>\r\n            {enableOverlay && (\r\n                <label\r\n                    htmlFor={'EZDrawer__checkbox' + idSuffix}\r\n                    id={'EZDrawer__overlay' + idSuffix}\r\n                    className='EZDrawer__overlay'\r\n                    style={overlayStyles}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EZDrawer\r\n"],"names":["getDirectionStyle","dir","size","top","left","transform","width","height","right","bottom","EZDrawer","open","onClose","children","style","enableOverlay","overlayColor","overlayOpacity","zIndex","duration","direction","className","idSuffix","Math","random","toString","substring","overlayStyles","backgroundColor","opacity","drawerStyles","transitionDuration","React","id","type","onChange","checked","role","htmlFor"],"mappings":"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"}